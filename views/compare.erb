<!DOCTYPE html>
<html>
    <head>
        <%= partial 'partial/beg', locals: {title: "Compare"}%>
        <link rel="stylesheet" href="css/trending.css"></link>
        <script src="js/jquery.min.js"></script>
        <script src="js/jquery-ui.min.js"></script>
        <script src="js/vue.js"></script>
    </head>
    <body>
        <script type="text/x-template" id="grid-template">
        <div class="row" style="padding-left:10px;margin:0">
            <div class="card" style="width:12em;margin:10px" v-for="entry in filteredData">
                <div class="row">
                    <div class="col-sm-8">
                        <b><p v-for="key in columns" style="text-align:center;margin-bottom:12px">{{ key | capitalize }}</p></b>
                    </div>
                    <div class="col-sm-4">
            <p v-for="key in columns" style="text-align:center;margin-bottom:12px">{{ (typeof entry[key] === 'string') ? entry[key] : Math.round(entry[key] * 100) / 100 }}</p>
                    </div>
                </div>
            </div>
        </div>
        </script>
        <button id="addbutton">Add (+)</button>
        <div class="row">
            <div class="col" id="newer">
                <iframe src="/compare" style="border:none" width="100%" height="100%"></iframe>
            </div>
            <div id="demo">
                <form id="search" align="center">
                    <input name="query" placeholder="Search" v-model="searchQuery">
                </form>
                <demo-grid
                                                             :data="gridData"
                                                             :columns="gridColumns"
                                                             :filter-key="searchQuery">
                </demo-grid>
            </div>
        </div>
    </body>
    <script>
Vue.component('demo-grid', {
    template: '#grid-template',
    props: {
        data: Array,
        columns: Array,
        filterKey: String
    },
    data: function () {
        var sortOrders = {}
        this.columns.forEach(function (key) {
            sortOrders[key] = 1
        })
        return {
            sortKey: '',
            sortOrders: sortOrders
        }
    },
    computed: {
        filteredData: function () {
            var sortKey = this.sortKey
                var filterKey = this.filterKey && this.filterKey.toLowerCase()
                var order = this.sortOrders[sortKey] || 1
                var data = this.data
                if (filterKey) {
                    data = data.filter(function (row) {
                        return Object.keys(row).some(function (key) {
                            return String(row[key]).toLowerCase().indexOf(filterKey) > -1
                        })
                    })
                }
            if (sortKey) {
                data = data.slice().sort(function (a, b) {
                    a = a[sortKey]
                        b = b[sortKey]
                        return (a === b ? 0 : a > b ? 1 : -1) * order
                })
            }
            return data
        }
    },
    filters: {
        capitalize: function (str) {
            return str.charAt(0).toUpperCase() + str.slice(1)
        }
    },
    methods: {
        sortBy: function (key) {
            this.sortKey = key
                this.sortOrders[key] = this.sortOrders[key] * -1
        }
    }
})
var demo = new Vue({
    el: '#demo',
    data: {
        searchQuery: '',
        gridColumns: ['team', <%= @news.map{ |w| "'#{w}'"}.join(', ') %>, <%= @keys.map{ |w| "'#{w}'"}.join(', ') %>],
        gridData: <%= @teams.values.to_json  %>
}
})
var addbutton = document.getElementById("addbutton");
addbutton.addEventListener("click", function() {
    var demoo = document.getElementById("newer");
    var clone = demoo.firstElementChild.cloneNode(true);
    demoo.appendChild(clone);
});
    </script>
</html>
